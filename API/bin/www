#!/usr/bin/env node

const PORT = 6001;

var app = require('../app');
app.set('port', PORT);

var server = null;

if (process.env.NODE_ENV === 'production') {
  const fs = require('fs');
  const https = require('https');

  const privateKey = fs.readFileSync('/etc/letsencrypt/live/api.f1wiz.com/privkey.pem', 'utf8');
  const certificate = fs.readFileSync('/etc/letsencrypt/live/api.f1wiz.com/cert.pem', 'utf8');
  const ca = fs.readFileSync('/etc/letsencrypt/live/api.f1wiz.com/chain.pem', 'utf8');

  const credentials = {
    key: privateKey,
    cert: certificate,
    ca: ca
  };

  server = https.createServer(credentials, app);

} else if (process.env.NODE_ENV === 'development') {
  var http = require('http');

  server = http.createServer(app);
}


server.listen(PORT);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof PORT === 'string'
    ? 'Pipe ' + PORT
    : 'Port ' + PORT;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
